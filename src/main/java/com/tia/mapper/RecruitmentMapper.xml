<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tia.dao.RecruitmentMapper" >
  <resultMap id="BaseResultMap" type="com.tia.entity.Recruitment" >
    <id column="recruit_id" property="recruitId" jdbcType="INTEGER" />
    <result column="recruit_name" property="recruitName" jdbcType="VARCHAR" />
    <result column="recruit_description" property="recruitDescription" jdbcType="VARCHAR" />
    <result column="recruit_requirements" property="recruitRequirements" jdbcType="VARCHAR" />
    <result column="registered_number" property="registeredNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    recruit_id, recruit_name, recruit_description, recruit_requirements, registered_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Recruitment
    where recruit_id = #{recruitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Recruitment
    where recruit_id = #{recruitId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tia.entity.Recruitment" >
    insert into Recruitment (recruit_id, recruit_name, recruit_description, 
      recruit_requirements, registered_number)
    values (#{recruitId,jdbcType=INTEGER}, #{recruitName,jdbcType=VARCHAR}, #{recruitDescription,jdbcType=VARCHAR}, 
      #{recruitRequirements,jdbcType=VARCHAR}, #{registeredNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tia.entity.Recruitment" >
    insert into Recruitment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recruitId != null" >
        recruit_id,
      </if>
      <if test="recruitName != null" >
        recruit_name,
      </if>
      <if test="recruitDescription != null" >
        recruit_description,
      </if>
      <if test="recruitRequirements != null" >
        recruit_requirements,
      </if>
      <if test="registeredNumber != null" >
        registered_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recruitId != null" >
        #{recruitId,jdbcType=INTEGER},
      </if>
      <if test="recruitName != null" >
        #{recruitName,jdbcType=VARCHAR},
      </if>
      <if test="recruitDescription != null" >
        #{recruitDescription,jdbcType=VARCHAR},
      </if>
      <if test="recruitRequirements != null" >
        #{recruitRequirements,jdbcType=VARCHAR},
      </if>
      <if test="registeredNumber != null" >
        #{registeredNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tia.entity.Recruitment" >
    update Recruitment
    <set >
      <if test="recruitName != null" >
        recruit_name = #{recruitName,jdbcType=VARCHAR},
      </if>
      <if test="recruitDescription != null" >
        recruit_description = #{recruitDescription,jdbcType=VARCHAR},
      </if>
      <if test="recruitRequirements != null" >
        recruit_requirements = #{recruitRequirements,jdbcType=VARCHAR},
      </if>
      <if test="registeredNumber != null" >
        registered_number = #{registeredNumber,jdbcType=INTEGER},
      </if>
    </set>
    where recruit_id = #{recruitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tia.entity.Recruitment" >
    update Recruitment
    set recruit_name = #{recruitName,jdbcType=VARCHAR},
      recruit_description = #{recruitDescription,jdbcType=VARCHAR},
      recruit_requirements = #{recruitRequirements,jdbcType=VARCHAR},
      registered_number = #{registeredNumber,jdbcType=INTEGER}
    where recruit_id = #{recruitId,jdbcType=INTEGER}
  </update>
</mapper>